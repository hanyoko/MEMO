***** 상태관리 *****
const [state, setState] = useState("green")
const [state, dispatch] = useReducer(reducer, initialState)
dispatch ---> 액션을 발생시키는 함수
redux 사용하기
* 스토어 생성하기
const store = Redux.createStore(reducer)
* 상태값 수정
store.dispatch ({액션 객체})
* 상태값 조회
store.getState()
* 구독
store.subscribe(함수)

react-redux
react-redux 설치 npm install react-redux
*스토어 리액트 전역에서 사용하기
<Provider store={store}>
	<App/>
</Provider>
* 리덕스 상태 조회하는 Hook 함수
state = 10, state = "green"
state = {
	todos: [
		{
			id: 1,
			text: "리덕스"
		},
		{
			id: 1,
			text: "리덕스"
		}
	],
	number: 10
}
* 리덕스 상태 조회하는 Hook 함수
useSelector(state => state)
* 디스패치를 반환하는 Hook 함수
useDispatch ---> dispatch

커스텀훅 + useReducer()
1개

리덕스
1개




할일목록 구현
1. 컨테이너 컴포넌트 TodosContainer.js
2. 프레젠 테이셔널 컴포넌트
Todos.js
TodoList.js
TodoItem.js

리덕스 미들웨어
리덕스 미드루에어는 리덕스가 지니는 핵심기능
ContextAPI와 차별화되는 부분
액션 ---> 미들웨어 ---> 리듀서 ---> 스토어
dispatch ({ type: "add_todo" })
*리덕스 미들웨어를 사용하면 액션이 디스패치 된 다음, 리듀서에게 해당 액션을 받아서 업데이트 하기 전에 추가적인 작업을 할 수 있음
추가적인 작업의 ex)
1. 특정 조건에 따라 액션이 무시되게 만들 수 있다
2. 액션을 콘솔에 출력하거나, 서버족에 로깅을 할 수 있다
3. 액션이 디스패치 됐을 때 이를 수정해서 리듀서에게 전달할 수 있다
4. 특정 액션이 발생했을 때 이에 기반하여 다른 액션이 발생되도록 할 수 있다
5. 특정 액션이 발생했을 때 특정 자바스크립트 함수를 실핼시킬 수도 있다
1) 리덕스 미들웨어 만들어보기
2) 리덕스 미들웨어 라이브러리 사용
redux-logger
redux-thunk --> 비동기전송

***리덕스에서 미들웨어를 사용하는 주된 용도는 비동기 작업을 처리할 때***
***앱에서 백엔드api를 연동해야할 때 리덕스 미들웨어로 처리한다***
비동기 작업 관련된 리덕스 미들웨어 라이브러리
redux-thunk
redux-saga
redux-opsercable
redux-promise-middleware

1) 리덕스 미들웨어 만들어보기
2) 리덕스 미들웨어 

[learn-redux-middleware]
npm install redux
npm install react-redux
둘 다 설치해줘야한다

*리액트에서 리덕스 적용하기
1. 리덕스 모듈 만들기
액션타입, 액션생성함수, 리듀서
2. 루트 리듀서 만들기
const rootReducer = combineReducers({ counter: counter, todos: todos })
3. 스토어 만들기
const store = createStore(rootReducer)
4. 전역에 스토어 사용하기
<Provider store={store}>
	<App/>
</Provider>

*리덕스 미들웨어
미들웨어는 함수입니다.
함수를 연달아서 두번 리턴하는 함수
const middleware = store => next => action => {
	//하고싶은 작업 ....
}
function middleware(store){
	return function(next){
		return function(action){
			//하고싶은 작업 .....
		}
	}
}
각 함수에서 받아오는 파라미터
- store 리덕스 스토어 store dispatch() / getState() / subscribe() 내장함수들이 있음
- next 액션을 다음 미들웨어에게 전달하는 함수
ex) next


store	상태와 관리를 해주는
reducer	업데이트 해주는
state	수정할 수 없고 변경할 수 없다


npm install redux-logger 설치



 










