<<<<<<< HEAD
230313

[TYPESCRIPT 복습]

https://blog.naver.com/pink_candy02/222642655549

타입스크립트 블로그

객체: object
여러 타입의 상위 타입이기 때문에 그다지 유용하지 않습니다.
보다 정확하게 타입 지정을 하기 위해 다음과 같이 객체 속성(Properties)들에 대한 타입을 개별적으로 지정할 수 있습니다.
ex)
let obj: object = {}
let arr: object = [];
let func: object = function(){}
let date: object = new Date()

*보다 정확하게 타입 지정을 위해 객체 속성들에 대한 타입을 개별적으로 지정
let user1: {name: string, age: number} = {
	name: "green",
	age: 30
}

*유니온타입
2개 이상의 타입을 허용하는 경우 이를 유니온이라고 한다 
| (vertical bar)를 통해 타입을 구분하며 ()는 선택사항
ex)
let union: (nuber | string) ;
let unionArr: (number | string) [] ;


*인터섹션(intersection) & (ampersand)를 사용해 2개 이상의 타입을 조합하는 경우 이를 인터섹션이라고 한다.
interface User {
name: string,
age: number
}
interface IsJob {
	isJob: boolean
}
const green: User & IsJob = {
	name: "A"
	age: 30
	isJob: true
}

타입스크립트 함수
1. 화살표 함수를 사용해서 타입을 지정
let myfun : (매개변수1: 매개변수1타입, 매개변수2: 매개변수2타입) => 리턴타입;
myfun = funtion(x,y){
	return x + y
}
ex) let myfun(arg1:number, arg2:number) => number
myfun = function(x,y){
	return x+y
}
function add2(a: number, b: number): number {
	return a+b
}
let myfun2(arg1:number, arg2:number) => void
myfun2 = function(x,y){
	console.log(`두 숫자의 합은 ${x+y}입니다.`)
}
function add2(a: number, b: number): void {
	console.log(`두 숫자의 합은 ${x+y}입니다.`)
}

*옵셔널 매개변수
function printName(name?: string)
=======
230313

[TYPESCRIPT 복습]

https://blog.naver.com/pink_candy02/222642655549

타입스크립트 블로그

객체: object
여러 타입의 상위 타입이기 때문에 그다지 유용하지 않습니다.
보다 정확하게 타입 지정을 하기 위해 다음과 같이 객체 속성(Properties)들에 대한 타입을 개별적으로 지정할 수 있습니다.
ex)
let obj: object = {}
let arr: object = [];
let func: object = function(){}
let date: object = new Date()

*보다 정확하게 타입 지정을 위해 객체 속성들에 대한 타입을 개별적으로 지정
let user1: {name: string, age: number} = {
	name: "green",
	age: 30
}

*유니온타입
2개 이상의 타입을 허용하는 경우 이를 유니온이라고 한다 
| (vertical bar)를 통해 타입을 구분하며 ()는 선택사항
ex)
let union: (nuber | string) ;
let unionArr: (number | string) [] ;


*인터섹션(intersection) & (ampersand)를 사용해 2개 이상의 타입을 조합하는 경우 이를 인터섹션이라고 한다.
interface User {
name: string,
age: number
}
interface IsJob {
	isJob: boolean
}
const green: User & IsJob = {
	name: "A"
	age: 30
	isJob: true
}

타입스크립트 함수
1. 화살표 함수를 사용해서 타입을 지정
let myfun : (매개변수1: 매개변수1타입, 매개변수2: 매개변수2타입) => 리턴타입;
myfun = funtion(x,y){
	return x + y
}
ex) let myfun(arg1:number, arg2:number) => number
myfun = function(x,y){
	return x+y
}
function add2(a: number, b: number): number {
	return a+b
}
let myfun2(arg1:number, arg2:number) => void
myfun2 = function(x,y){
	console.log(`두 숫자의 합은 ${x+y}입니다.`)
}
function add2(a: number, b: number): void {
	console.log(`두 숫자의 합은 ${x+y}입니다.`)
}

*옵셔널 매개변수
function printName(name?: string)
>>>>>>> a4658f33b132b701412ba302e59044628f3f3255
