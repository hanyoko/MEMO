230302

파이썬 자료형
숫자형 : 숫자 형태로 이루어진 자료형
정수, 실수, 8진수, 16진수
문자열 자료형 : 문자들의 집합 "", '', """ """, ''' '''
리스트 자료형 : nums = [1,2,3,4,5,6]
리스트명 = [요소1, 요소2, 요소3] 리스트명[0]
리스트 관련 함수
1. append() 리스트의 마지막 요소를 추가
구문) 리스트.append(추가할 요소)
2. sort() 리스트의 요소를 순서대로 정렬
구문) 리스트.sort()
3. reverse() 리스트 뒤집기
구문) 리스트.reverse()
4. index() 리스트에 해당 값이 있으면 그 값의 인덱스 값을 리턴
없으면 오류 발생
구문) 리스트.index(value)
5. insert(start, value) 리스트에 요소 삽입 start번째 위치에 value를 삽입
구문) 리스트.insert(2,20)
6. remove(value) 리스트에서 첫번째로 나오는 value 삭제
list = [1,2,3,1,2,3] list.remove(2) ---> [1,3,1,2,3]
7. pop() 리스트의 맨 마지막 요소를 리턴하고 그 요소는 삭제
구문) 리스트.pop()
8. count(value) 리스트 안에 value가 몇개 있는지 개수를 리턴
list = [1,2,3,1,2,3]
구문) 리스트.count(3)

튜플 자료형 ()
*요소값 변경할 수 없음
t1 = ()
t2 = (1,)		//요소가 1개뿐일 때는 쉼표를 함께 적어줘야한다.
t3 = (1,2,3)
t4 = 1,2,3	//소괄호 생략가능
딕셔너리 자료형 key: value
d1 = { 'name': 'green', 'age': 30}
d1 = { 'name': 'green', 'age': 30, 'name': 'blue'}
d1['name']

딕셔너리 관련 함수
1. key 리스트 만들기 keys()
구문) 딕셔너리.keys()
파이썬 2.7버전까지 keys만 리스트로 돌려준다.
그 이후부터는 dict_keys 객체로 돌려준다.
list()
2. value 리스트 만들기 values()
구문) 딕셔너리.values
파이썬 2.7버전까지 keys만 리스트로 돌려준다.
그 이후부터는 dict_keys 객체로 돌려준다.
3. key, value 쌍으로 구하기 items()
key와 value의 쌍을 튜플로 묶은 값을 dict_items 객체로 돌려준다
4. key:value 쌍 모두 지우기 clear()
구문) 딕셔너리.clear()
5. key로 value값 구하기 get()
구문) 딕셔너리 get(key)
딕셔너리[key]
차이) 존재하지 않는 key로 접근 시 딕셔너리[key] key오류가 발생
딕셔너리.get(key) None을 돌려준다
6. 해당 key가 딕셔너리 안에 있는지 조사 in 
구문) 'key' in 딕셔너리 있으면 True 없으면 False 리턴

집합 자료형 파이썬 2.3부터 지원시작
집합에 관련된 것을 쉽게 처리하기 위해 만든 자료형
* 중복을 허용하지않음
s1 = set([1,2,3])
s2 = set("Hello")
s = set()
s3 = set([1,2,3,4,5,1,2,3])
li = list(s3)
집합 자료형 관련 함수
구문) 집합.add(value)
2. 값 여러개 추가하기 update
구문) 집합.update([4,5,6])
3. 특정 값 제거하기 remove()
구문) 집합.remove(value)
4. 교집합 집합1 & 집합2, 집합1.intersection(집합2)
s1 = set([1,2,4,5,6])
s2 = set([4,5,6,7,8,9])
s1 & s2 {4,5,6.}
s1.intersection(s2) {456}
5. 합집합 집합 1 | 집합 2, 집합1.union(집합2)
집합을 합쳐서 리턴해준다(중복해서 포함되는 값은 하나씩만 들어간다)
s1 = set([1,2,4,5,6])
s2 = set([4,5,6,7,8,9])
s1 | s2 {1,2,3,4,5,6,7,8,9} (중복해서 포함되는 값은 하나씩만 들어간다) 4,5,6
s1.union(s2) {1,2,3,4,5,6,7,8,9}
6. 차집합 집합1 - 집합2, 집합1.difference(집합2)
s1 = set([1,2,3,4,5,6])
s2 = set([4,5,6,7,8,9])
s1 - s2 {1,2,3}
s1.fifference(s2) {1,2,3}

[1,2,3,4,5]
불 자료형 참과 거짓을 나타내는 자료형 True 참, False 거짓

문자열 인덱싱문제
01 pin = "8881120-16068234" 성별을 나타내는 숫자를 출력하세요
print(pin[7])
02. 문자열 "a:b:c:d"가 있다 replace를 사용해서 "a#b#c#d" 바꿔서 출력하세요
a = "a:b:c:d"
b = (a.replace(":","#"))
print(b) "a#b#c#d"
03. [1,3,5,4,2] 리스트를 [5,4,3,2,1]로 출력
list1 = [1,3,5,4,2]
list1.sort() [1,2,3,4,5]
list1.reverse() [5,4,3,2,1]
04.["life", "is", "too", "short"] 리스트를 문자열로 만들어서 출력하세요
list2 = ["life", "is", "too", "short"]
result = (" ".join(list2))	//join 
print(result)
05 [1,1,1,2,2,2,3,3,4,4,5,5,6] -----< [1,2,3,4,5,6] 리스트에서 중복을 제거하여 출력하세요
list3 = [1,1,1,2,2,2,3,3,4,4,5,5,6]
setlist3 = set(list3)
list4 = list(setlist3)
print(list4)

제어문
1. 조건문
1) if문 else if문 else문
if 조건문 :
	수행할문장
*비교연산자
x<y x가 y보다 작다
x>y x가 y보다 크다
x == y x와 y가 같다
x != y x와 y가 같지않다
x >= y x가 y보다 크거나 같다
x <= y x가 y보다 작거나 같다
*논리연산자
and 연산자 1<10 and 5<6 둘 중 모두 참일 때 참
or 연산자 1<10 or 5>10 둘 중 하나만 참이어도 참
not 연산자 not x	x가 거짓이면 참, x가 참이면 거짓
2. 반복문












