canvas
html의 canvas 요소
<canvas></canvas>
- width와 height 설정 (기본값 300px*150px)

javascript - getContext() 메소드
캔버스 드로잉 컨텍스트를 반환해주는 메소드
드로잉에 필요한 함수와 속성을 가진 객체를 생성
매개변수 2d, webgl(3d)

ex>
let canvas = document.querySelector("canvas");
let ctx = canvas.getContext("2d");

3) 속성
- fill : 경로의 내부를 채워서 내부가 채워진 도형을 그림
- fillRect(x,y,width,height) : 색칠된 사각형을 그림
- fillStyle : 도형에 채울 때 사용되는 색상 지정
ex) fillStyle = "#fff, fillstyle = "red"
- stroke : 윤곽선을 이용하여 도형을 그림
- strokeRect(x, y, width, height) 윤곽선으로 사각형을 그림
- strokeStyle : 윤곽선을 그릴 때 사용되는 색상 지정
- clearRect(x,y,width,height) 지정된 사각형 영역을 지움
- beginPath() : 새로운 경로를 시작(펜툴선택)
- closePath() : 시작 부분과 연결된 직선을 추가
- moveTo(x,y) : 펜을 지정된 좌표로 이동
- lineTo(x,y) : 현재 드로잉 위치에서 지정된 선을 그림
- arc(x, y, radius, 시작각, 끝나는각, 시계방향)
라디안각 Math.PI => 180 2*Math.PI => 360

애니메이션
setTimeout : 일정 시간이 지나면 해당 함수를 실행
setInterval : 일정 시간마다 해당 함수를 실행
requestAnimation : 브라우저에게 애니메이션을 실행하도록 요청, 재귀 호출을 사용해서 반복

재귀 함수
모니터 주사율에 맞추어 함수가 호출됨
60hz 사용하는 모니터는 초당 60frame 호출
144hz 사용하는 모니터는 초당 144frame 호출
함수 내에게 다시 자기 자신을 부르는 함수
function recurisionFunc(){
	.	
	.
	.
	recurisionFunc();
}

4) canvas에 이미지 적용
- 이미지객체 생성
const imgElem = new Image();
- 이미지객체 경로지정
imgElem.src = "./images/img.jpg";
- 캔버스에 그리기
drawImage(img, x, y)
drawImage(image, x, y, width, height)

5) text 작성
- font : 폰트 스타일 지정
ex) ctx.font = "48px serif"
- fillText(text, x, y) 속이찬 글자를 작성
ex) ctx.fillText("Hello Canvas", 10, 50)
- strokeText(text, x, y) 선으로 된 글자를 작성

6) 상태의 저장과 복원
- save() canvas의 상태를 저장
- restore() 가장 최근에 저장된 canvas 상태를 복원

7) 변형 메소드
translate(x,y) 위치이동
ctx.translate(50,50)
ctx.fillRect(0,0,25,25)

변수 





