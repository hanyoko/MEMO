자바스크립트
동작언어
자바스크립트 기본자료형
number, string, boolean, null, undefined
참조형 object

형변환
1) 문자형으로 변환하기
String(value)
2) 숫자형으로 변환하기
Number(value)
Number("ddd") => NaN
let str1 = Number("aa");
let str2 = Number("bb");
str1 == str2 => false 
isNaN()
3) 블린형으로 변환하기
Boolean(value)
* 숫자 0, 빈문자열 "", undefined, null, NaN => false
* 그외의 값은 true를 반환
                                                 
변수 선언하기
ex) let a = 10	let a; a=10
let : 
var : 
* 호이스팅 변수선언부만 위로 끌어올려진다
* 같은 이름의 식별자를 사용할 수 있다.
var a;		//호이스팅으로 인해서 위로 올라가있다.
console.log(a)
var a = 10;	//아래쪽에 적었지만

const :
const a = 10 선언과 동시에 값을 넣어줘야한다.
const a; 	//에러를 발생시켜 사용할 수 없다.
a = 20; 	//에러 - 다른 값을 저장할 수 없다. 변경 불가능
const
* 동적타입언어
연산자
1) 산술연산자
+, -, /, *, %, **
+ => 문자열 결합연산자
2) 대입연산자
let x = 10
let x += 1; x = x + 1;
let x -= 1;
let x *= 2
3) 비교연산자
a < b
a > b
a == b 동등 -> 값만 비교
a === b 일치 -> 값과 타입을 비교
ex)
10 == "10"
true
10 === "10"
false
a ! = b
a ! == b

4) 논리연산자
not연산자 !	!true => false	!false => true
or 연산자 ||	a || b	let x = 10, let y = 20 x > 0 || y > 30
a || b || c
alert ( 1 || 0 )
let result = 0 || 1 || "aa"
let result2 = undefined || 0 || null
가장 왼쪽 피연사부터 오른쪽으로 나아가며 피연사를 평가한다.
각 피연산자를 블린형으로 변환 변환 후 값이 true면 
연산을 멈추고 해당 피연산자의 변환 전 원래값은 반환
let str1 = "";
undefined
let str2 = "";
undefined
let str3 = "green";
undefined
console.log(str1 || str2 || str3)
green
undefined
false || alert("하하하하하하")
undefined
true || alert("aaa")
true

and 연산자 &&	a && b
false && true
true && false
let result = value1 && value2 && value3
alert( alert(1) || 2 || alert(3))

console.log(1 && 0 && 5)
0
undefined
console.log(1 && 3 && 5)
5
undefined
console.log(!true)
false
undefined
console.log(!false)
true
undefined
!!0
false
!!10
true
!!""
false
!!"aaaa"
true
let aa = alert(1)
undefined
aa

undefined
alert(alert(1) || 2 || alert(3))
undefined
alert(alert(1) && 2 && alert(3))
undefined

5) 증감연산자


let str1 = "10";
undefined
let str2 = "20";
undefined
let sum = str1 * str2;
undefined
sum
200