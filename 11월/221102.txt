자바스크립트
객체기반의 스크립트 언어이다. HTML로는 웹의 내용을 작성하고, CSS는 웹을 디자인하며,
자바스크립트로는 웹의 동작을 구현할 수 있다.

특징 
- 객체 기반의 스크립트 언어
- 동적이며, 타입을 명시할 필요가 없는 인터프리터 언어
- 객체 지향형 프로그래밍과 함수형 프로그래밍을 모두 표현할 수 있다.

JAVA의 이름만 빌린 것이고 아예 다른 언어다.
(10일만에 만들어진 언어)

html에 자바스크립트 작성하기
html에서 <script></script> 태그 사이에 jvascript 코드가 삽입된다.


1. window.alert() 메소드 경고창에 삽입
2. html 화면에 삽입
3. document.write() 메소드 웹브라우저에서 제공하는 화면에 삽입

[html 파일에 작성]
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="./print.js"></script>
</head>
<body>
    <div id="test"></div>
</body>
</html>
-> script 태그를 이용해서 js 파일을 불러올 수 있다.

[javascript 파일에 작성]
//1.경고창 출력
alert("여러분"); /* 아이디 또는 비밀번호를 틀렸을 때 뜨는 알림창 */
//2.body안에 출력
document.write("안녕하세요");
//3.console에 출력하기
console.log("재미있는 자바스크립트")
//4.html DOM요소 내용으로 출력하기
document.getElementById("test").innerHTML = "hello"; /* css에서 id를 불러올 때 #을 사용하는 것과 똑같다. .innerHTML을 이용해서 내용을 변경할 수 있다. */
-> html에 불러진 js의 값이 적용이 안된다 

그래서 <script src="./print.js"></script> 태그 내에
<script defer src="./print.js"></script>
defer을 붙여주면 실행이 된다.

        console.log(document.getElementById("box1"));
        //1. 단수선택
        //document.getElementById("id명")
        //document.querySeletor("css선택자 그대로 ex) #box1")

        //2. 복수선택
        //document.getElementsByClassName("class명") - html컬렉션(유사배열)
        //document.getElementsByTagName("tag명") - html컬렉션(유사배열)
        //document.querySelectorAll("css선택자 그대로") - 노드리스트(유사배열)


//(1) console.log(document.getElementById("box1"));
<div id="box1" class="divbox"> 박스1입니다.</div> -> console 창에 표시되는 것
//(2)console.log(document.querySelector("div"));
<div id="box1" class="divbox"> 박스1입니다.</div> -> console 창에 표시되는 것
console.log(document.querySelectorAll(".divbox"));
NodeList(2) [div#box1.divbox, div#box2.divbox]
0
: 
div#box1.divbox
1
: 
div#box2.divbox
length
: 
2
[[Prototype]]
: 
NodeList


document.querySelectorAll(".divbox")[0].innerHTML = "hello";
document.querySelectorAll(".divbox")[1].innerHTML = "hello";
문자를 변경할 때 [] 안에 index를 입력해주면 hello로 변경된다.

<body>
    <div>
        <h1>큰제목</h1>
    </div>
    <button onclick="printConsole()">클릭하세요</button>
    <ul>
        <li>list1</li>
        <li>list2</li>
        <li>list3</li>
        <li>list4</li>
    </ul>
    <script>
        //버튼을 클릭하면 h1의 내용을 콘솔에 출력
        //기능 - 함수
        function printConsole() {
            // console.log(document.querySelector("h1").innerHTML); console에 출력
            alert(document.querySelector("h1").innerHTML); //알림창으로 출력
        }
    </script>
</body>




<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <img src="images/pic_bulboff.gif" alt="#">
    <div>
        <button onclick="bulon()">불 켜기</button>
        <button onclick="buloff()">불 끄기</button>
    </div>
    <script>
        console.log(document.querySelector("img").src);
        function buloff(){
            document.querySelector("img").src = "./images/pic_bulboff.gif";
        }
        function bulon() {
            document.querySelector("img").src = "./images/pic_bulbon.gif";
        }
    </script>
</body>
</html>

-> click 이벤트를 이용해서 전구 불켜기 불끄기 실행하기;


자바스크립트를 이용해서 '내용', '속성', '스타일'을 변경할 수 있다.



    <style>
        div {
            width: 200px;
            height: 200px;
            background-color: tomato;
        }
    </style>
</head>
<body>
    <div></div>
    <button onclick="chColor()">클릭하세요</button>
    <script>
        function chColor() {
            document.querySelector("div")
            .style.backgroundColor = "blue";
        }
    </script>
클릭했을 때 색변경


    <style>
        div {
            width: 200px;
            height: 200px;
            background-color: tomato;
        }
    </style>
</head>
<body>
    <div></div>
    <button onclick="chColor()">클릭하세요</button>
    <script>
        function chColor() {
            document.querySelector("div")
            .style.borderRadius = "50%";
        }
    </script>
클릭했을 때 도형의 형태 변경


[웹 프로그래밍 개발 이해와 활용]
변수와 상수
변수 : 데이터를 담기 위한 메모리 공간을 의미한다. 쉽게 생각하면, 어떤 값을 담기 위한 상자나 그릇이라고 비유할 수 있다.
1. 온라인 쇼핑몰 - 판매 중인 상품이나 장바구니 등의 정보
2. 채팅 어플리케이션 - 사용자 정보, 메시지 등의 정보

변수는 이러한 정보를 저장하는 용도로 사용됩니다.

변수 선언 
var / let / const

var
var는 function 단위의 scope을 가진다.
*선언할 때는 undefined가 담긴다.
같은 이름은 여러번 선언해도 에러가 나지 않는다.
요즘에는 잘 사용하지않는다.
상수 : 


* var와 let의 차이점 기억하기

let
같은 이름을 선언할 수 없다. 만약, 같은 이름을 선언하면 에러가 발생한다.


메모리와 데이터
- 컴퓨터는 모든 데이터를 0 또는 1로 바꿔 기억한다.
- 0 또는 1만 표현할 수 있는 하나의 메모리 조각을 1비트라고 한다.
- 메모리는 매우 많은 비트들로 구성되어 있는데 각 비트는 고유한 식별자를 통해 위치를 확인할 수 있다.
1바이트는 8비트를 가진다. -> 2의 8승이므로 256개의 값을 표현할 수 있다.
2바이트는 2의 16승 65536개의 값을 표현한다.
자바스크립트 숫자타입의 경우 정수형인지 부동소수형인지 구분하지 않고 64비트 즉 8바이트를 확보한다.
*기억 ! 모든 데이터는 바이트 단위릐 식별자, 정확하게는 메모리 주솟값을 통해 서로 구분하고 연결할 수 있다.

문제> 
admin과 name이라는 변수를 선언하세요.
name에 값으로 "John"을 할당해 보세요
name의 값을 admin에 복사해 보세요.
admin의 값을 alert 창에 띄워보세요. "John"이 출력되어야 합니다.

    <script>
        let admin;  /* admin과 name이라는 변수를 선언하세요. */
        let name;  
        name = "John";  /* name에 값으로 "John"을 할당해 보세요 */
        admin = name;  /* name의 값을 admin에 복사해 보세요. */
        alert(admin);  /* admin의 값을 alert 창에 띄워보세요. "John"이 출력되어야 합니다. */
    </script>

자바스크립트 - 동적타입언어
let a = 20
a 타입 Number
a = "green"
a 타입 String

----구글 개발자 모드에 입력했을 때-----
let a = 20
undefined
a
20
typeof a
'number'
a = "green"
'green'
typeof a
'string'
-----------------------------------------
let num1 = 2.3654
undefined
num1
2.3654
typeof num1
'number'
let str = "grr"
undefined
typeof str
'string'
let boolean1 = false
undefined
typeod boolean1
VM298:1 Uncaught SyntaxError: Unexpected identifier 'boolean1'
let n1 = null;
undefined
typeof n1
'object'
----------------------------------------
typeof "aaaa"
'string'
typeof true
'boolean'
typeof null
'object'
typeof underined
'undefined'
typeof 123.456789
'number'
---------------------------------------


[데이터 타입]

기본형(primitive) 타입
Number - 숫자형
- 정수 및 부동소수점 숫자를 나타낸다.
- -2/53-1 ~ 2/53-1

BigInt
let number1 =
1234564545454545454545454545454545454545454544545454544n;
- bigint 타입으로 나타내고 싶으면 끝에 n을 입력하면 된다.

String - 문자형
let str = "a" 큰따옴표
let str = 'a' 작은따옴표
let str = `a` 역따옴표(백틱)

Boolean(논리타입) - 불린형
true 긍정 / false 부정

Null
- 개발자가 의도해서 비워놓은 것

Undefined
- 개발자가 의도하지않게 비워져있는 것
- 값이 할당되지않은 상태


객체형(object) 타입
- 나중에 배울 예정





